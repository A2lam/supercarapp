<?php

namespace A2\StockBundle\Repository;
use A2\StockBundle\Entity\Stock;

/**
 * StockRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class StockRepository extends \Doctrine\ORM\EntityRepository
{
    public function myFind($id)
    {
        $qb = $this->createQueryBuilder('s');
        $qb
            ->where('s.id = :id')
            ->setParameter('id', $id)
            ->andWhere('s.isActive = :isActive')
            ->setParameter('isActive', 1)
        ;

        return $qb
            ->getQuery()
            ->getSingleResult()
        ;
    }

    public function myRemove($id)
    {
        $stock = $this->myFind($id);
        $stock->setIsActive(false);

        return;
    }

    public function getAdminName(Stock $stock, $action)
    {
        $query = $this->_em->createQuery('SELECT u.name, u.lastname FROM A2UserBundle:User u WHERE u.id = :id');

        if ($action == 'add')
            $query->setParameter('id', $stock->getAdminAdd());
        else
            $query->setParameter('id', $stock->getUserUpdate());

        $name = "";
        $results = $query->getArrayResult();
        foreach ($results as $result)
        {
            $name = $result['name'];
            $name .= ' ' .$result['lastname'];
        }

        return $name;
    }

    public function findByKeyword($keyword)
    {
        $qb = $this->createQueryBuilder('s');

        $qb
            ->where('s.name LIKE \'%'. $keyword .'%\'')
        ;

        return $qb
            ->getQuery()
            ->getResult()
        ;
    }

    public function findByModelAndStorehouse($model, $storehouse)
    {
        $qb = $this->createQueryBuilder('s');

        $qb
            ->where('s.model = :model')
            ->setParameter('model', $model)
            ->andWhere('s.storehouse = :storehouse')
            ->setParameter('storehouse', $storehouse)
        ;

        return $qb
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
}